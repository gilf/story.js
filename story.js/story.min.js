/*
* story.js v0.1
*
* Copyright (c) Sela Group and Gil Fink. All rights reserved.
* Dual licensed under the MIT or GPL Version 2 licenses.
*
* Date: Fri Apr 20 14:00:12 2012 
*/
(function (b) { var n = "__story__", k = "_story_", o = b.storage = function (a) { return !a ? b.types[b.StorageTypes.IN_MEMORY] : b.types[a] }; b.types = {}; b.StorageTypes = { LOCAL_STORAGE: "LocalStorage", SESSION_STORAGE: "SessionStorage", INDEXEDDB: "IndexedDB", COOKIE: "Cookie", IN_MEMORY: "InMemroy" }; var i = function (a, c) { b.types[a] = c }, j = function (a) { return n + a }; b.Promise = function () { this.thens = [] }; b.Promise.prototype = { then: function (a, b) { this.thens.push({ resolve: a, reject: b }) }, resolve: function (a) { this.complete("resolve", a) }, reject: function (a) { this.complete("reject", a) }, complete: function (b, c) { if (b === "resolve") this.then = function (a) { a(c) }; else this.then = function (b, a) { a(c) }; this.resolve = this.reject = function () { throw new Error("Promise already completed."); }; var a, d = 0; while (a = this.thens[d]) { a[b] && a[b](c); d += 1 } delete this.thens } }; function a(c, d) { var a = new b.Promise; d(c, a); return a } var d = function (a) { switch (a) { case "local": this.storage = window.localStorage; break; case "session": this.storage = window.sessionStorage; break; default: throw new Error("No such Web Storage type"); } }; d.prototype.get = function (b) { return a(this, function (d, c) { try { var a = d.storage.getItem(j(b)); if (a !== null && a !== "undefined") a = window.JSON.parse(a); else a = undefined; c.resolve(a) } catch (e) { c.reject(e) } }) }; d.prototype.add = function (c, b) { return a(this, function (d, a) { try { d.storage.setItem(j(c), window.JSON.stringify(b)); a.resolve({ key: c, value: b }) } catch (e) { if (e.code === 22 || e.number === 2147942414) a.reject({ message: "QUOTA_EXCEEDED_ERR", error: e }); else a.reject(e) } }) }; d.prototype.update = function (b, a) { return this.add(b, a) }; d.prototype.remove = function (b) { return a(this, function (c, a) { try { c.storage.removeItem(j(b)); a.resolve() } catch (d) { a.reject(d) } }) }; d.prototype.contains = function (b) { return a(this, function (c, a) { try { var d = c.storage.getItem(j(b)); a.resolve(d !== null) } catch (e) { a.reject(e) } }) }; d.prototype.clear = function () { return a(this, function (b, a) { try { b.storage.clear(); a.resolve() } catch (c) { a.reject(c) } }) }; window.localStorage && i(b.StorageTypes.LOCAL_STORAGE, new d("local")); window.sessionStorage && i(b.StorageTypes.SESSION_STORAGE, new d("session")); var m = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB, h = window.IDBTransaction || window.webkitIDBTransaction, g = function (d, g) { var c = new b.Promise, a = d.name, e = d.db; if (e) c.resolve({ trans: e.transaction(a, g), name: a }); else { var f = d.storage.open(k + a); f.onsuccess = function (b) { d.db = b.target.result; c.resolve({ trans: e.transaction(a, g), name: a }) }; f.onerror = function (a) { c.reject(a) } } return c }, l = function () { }, c = function (a) { this.name = a }; l.prototype.createStore = function (a) { var e = new b.Promise, f = a.name, g = new c(f || k), d = m.open(f || k, a.version || 1); d.onsuccess = function () { g.db = d.result; e.resolve(g) }; d.onerror = function (a) { e.reject("IndexedDB error: " + a.target.errorCode) }; d.onupgradeneeded = function (e) { for (var c = e.currentTarget.result.createObjectStore(f, { keyPath: a.keyPath, autoIncrement: a.autoInc }), d = a.names.length, b = 0; b < d; b += 1) c.createIndex(a.names[b], a.values[b], { unique: a.unique[b] }) }; return e }; c.prototype.get = function (b) { return a(this, function (c, a) { g(c, h.READ_WRITE).then(function (c) { var d = []; c.trans.onerror = function (b) { a.reject(b) }; c.trans.oncomplete = function () { a.resolve({ key: b, value: d }) }; var e = c.trans.objectStore(c.name), f = e.get(b); f.onsuccess = function (a) { d.push(a.target.result) } }, function (b) { a.reject(b) }) }) }; c.prototype.add = function (c, b) { return a(this, function (d, a) { g(d, h.READ_WRITE).then(function (d) { d.trans.onabort = function (b) { a.reject(b) }; d.trans.oncomplete = function () { a.resolve({ key: c, value: b }) }; d.trans.objectStore(d.name).add(b, c) }, function (b) { if (b.code === 11) b = { name: "QUOTA_EXCEEDED_ERR", error: b }; a.reject(b) }) }) }; c.prototype.update = function (b, c) { return a(this, function (d, a) { g(d, h.READ_WRITE).then(function (d) { d.trans.onabort = function (b) { a.reject(b) }; d.trans.oncomplete = function () { a.resolve({ key: b, value: c }) }; var e = d.trans.objectStore(d.name).openCursor(b); e.pair = { key: b, value: c }; e.onsuccess = function (b) { var a = b.target.result; if (a) a.update(b.target.pair.value); else d.trans.abort() } }, function (b) { a.reject(b) }) }) }; c.prototype.remove = function (b) { return a(this, function (c, a) { g(c, h.READ_WRITE).then(function (c) { c.trans.onerror = function (b) { a.reject(b) }; c.trans.oncomplete = function () { a.resolve() }; var d = c.trans.objectStore(c.name); d["delete"](b) }, function (b) { a.reject(b) }) }) }; c.prototype.contains = function (b) { return a(this, function (c, a) { g(c, h.READ_ONLY).then(function (c) { var d = c.trans.objectStore(c.name).openCursor(IDBKeyRange.only(b)); c.trans.oncomplete = function () { a.resolve(d.result !== undefined) }; c.trans.onerror = function (b) { a.reject(b) } }, function (b) { a.reject(b) }) }) }; c.prototype.clear = function () { return a(this, function (b, a) { g(b, h.READ_WRITE).then(function (b) { b.trans.onerror = function (b) { a.reject(b) }; b.trans.oncomplete = function () { a.resolve() }; b.trans.objectStore(b.name).clear() }, function (b) { a.reject(b) }) }) }; c.prototype.close = function () { if (this.db) { this.db.close(); this.db = null } }; m && i(b.StorageTypes.INDEXEDDB, new l); var f = function () { }; f.prototype.get = function (b) { return a(this, function (d, a) { var c = document.cookie.match("(^|;) ?" + b + "=([^;]*)(;|$)"); if (c) a.resolve(unescape(c[2])); else a.reject({ message: "Cookie doesn't exists" }) }) }; f.prototype.add = function (b, c) { return a(this, function (e, d) { var a = b + "=" + escape(c); document.cookie = a; d.resolve({ key: b, cookieString: a }) }) }; f.prototype.update = function (b, a) { return this.add(b, a) }; f.prototype.remove = function (b) { return a(this, function (d, c) { var a = new Date; a.setTime(a.getTime() - 1); document.cookie = b += "=; expires=" + a.toGMTString(); c.resolve() }) }; f.prototype.contains = function (b) { return a(this, function (d, a) { var c = document.cookie.match("(^|;) ?" + b + "=([^;]*)(;|$)"); c ? a.resolve(true) : a.resolve(false) }) }; f.prototype.clear = function () { return a(this, function (b, a) { document.cookie = ""; a.resolve() }) }; i(b.StorageTypes.COOKIE, new f); var e = function () { this.storage = {}; this.validateKey = function (a) { return a instanceof Array || a === null || a === undefined ? false : true } }; e.prototype.get = function (b) { return a(this, function (a, c) { if (a.validateKey(b)) c.resolve(a.storage[b]); else c.reject("Invalid Key") }) }; e.prototype.add = function (b, c) { return a(this, function (a, d) { if (a.validateKey(b)) if (!a.storage.hasOwnProperty(b)) { a.storage[b] = c; d.resolve({ key: b, value: c }) } else d.reject({ message: "key already exists", key: b }) }) }; e.prototype.update = function (b, c) { return a(this, function (a, d) { if (a.validateKey(b)) if (a.storage.hasOwnProperty(b)) { a.storage[b] = c; d.resolve({ key: b, value: c }) } }) }; e.prototype.remove = function (b) { return a(this, function (a, c) { if (a.validateKey(b)) { if (a.storage.hasOwnProperty(b)) delete a.storage[b]; c.resolve() } }) }; e.prototype.contains = function (b) { return a(this, function (a, c) { c.resolve(a.storage.hasOwnProperty(b)) }) }; e.prototype.clear = function () { return a(this, function (a, b) { a.storage = {}; b.resolve() }) }; i(b.StorageTypes.IN_MEMORY, new e) })(this.story = this.story || {});